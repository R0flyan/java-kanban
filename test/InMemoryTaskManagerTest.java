import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class InMemoryTaskManagerTest {
    @Test
    void managerShouldCreateAndFindByIdDifferentTaskTypes() {
        TaskManager manager = Managers.getDefault();

        Task task = new Task(0, "Task", "TaskDesc", TaskStatus.NEW);
        manager.createTask(task);

        Epic epic = new Epic(0, "Epic", "EpicDesc");
        manager.createEpic(epic);

        Subtask subtask = new Subtask(0, "Subtask", "SubtaskDesc", TaskStatus.NEW, 2);
        manager.createSubtask(subtask);

        assertEquals(1, manager.getAllTasks().size(), "Неверное количество задач");
        assertEquals(1, manager.getAllEpics().size(), "Неверное количество эпиков");
        assertEquals(1, manager.getAllSubtasks().size(), "Неверное количество подзадач");
        assertNotNull(manager.getTask(1), "Не найдена обычная задача");
        assertNotNull(manager.getEpic(2), "Не найден эпик");
        assertNotNull(manager.getSubtask(3), "Не найдена подзадача");
        assertEquals(epic.getId(), manager.getSubtask(subtask.getId()).getEpicId(), "Подзадача не привязана к эпику");
    }

    @Test
    void manualAndAutoGeneratedTaskIdsShouldBeWithoutConflicts() {
        TaskManager manager = Managers.getDefault();
        Task task1 = new Task(1, "ManualTask1", "Description", TaskStatus.NEW);
        Task task2 = new Task(2, "ManualTask2", "Description", TaskStatus.NEW);
        Task autoTask1 = new Task(0, "AutoTask1", "Description", TaskStatus.NEW);
        Task autoTask2 = new Task(0, "AutoTask2", "Description", TaskStatus.NEW);

        manager.createTask(task1);
        manager.createTask(task2);
        int autoId1 = manager.createTask(autoTask1).getId();
        int autoId2 = manager.createTask(autoTask2).getId();

        assertEquals(4, manager.getAllTasks().size(), "Не все задачи добавились в список");

        assertNotNull(manager.getTask(1), "Ручная задача 1 не найдена");
        assertNotNull(manager.getTask(2), "Ручная задача 2 не найдена");
        assertNotNull(manager.getTask(autoId1), "Авто-задача 1 не найдена");
        assertNotNull(manager.getTask(autoId2), "Авто-задача 2 не найдена");

        assertNotEquals(1, autoId1, "Автоматический ID конфликтует с заданным");
        assertNotEquals(1, autoId2, "Автоматический ID конфликтует с заданным");
        assertNotEquals(2, autoId1, "Автоматический ID конфликтует с заданным");
        assertNotEquals(2, autoId2, "Автоматический ID конфликтует с заданным");

        assertNotEquals(autoId1, autoId2, "Автоматические ID не уникальны");
    }

    @Test
    void taskShouldNotChangeAfterCreatingInTaskManager() {
        TaskManager manager = Managers.getDefault();
        Task task = new Task(0, "SomeName", "SomeDescription", TaskStatus.IN_PROGRESS);
        String originalName = task.getName();
        String originalDescription = task.getDescription();
        TaskStatus originalStatus = task.getStatus();

        Task taskInManager = manager.getTask(manager.createTask(task).getId());

        assertEquals(originalName, taskInManager.getName(), "Имя задачи изменилось");
        assertEquals(originalDescription, taskInManager.getDescription(), "Описание задачи изменилось");
        assertEquals(originalStatus, taskInManager.getStatus(), "Статус задачи изменился");
    }
}